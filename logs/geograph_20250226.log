2025-02-26 20:25:46,601 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 20:25:46,626 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 20:25:50,217 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 20:25:50,242 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 20:25:50,247 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 20:25:50,366 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 20:25:50,371 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 20:25:50,372 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 20:25:50,375 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 20:25:50,375 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 20:25:50,434 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 20:25:50,440 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 20:25:59,569 - GeographGuardian - ERROR - Error in graph analytics: The `figure_or_data` positional argument must be `dict`-like, `list`-like, or an instance of plotly.graph_objs.Figure
2025-02-26 20:25:59,573 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 202, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 487, in plotly_chart
    figure = plotly.tools.return_figure_from_figure_or_data(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/plotly/tools.py", line 538, in return_figure_from_figure_or_data
    raise exceptions.PlotlyError(
_plotly_utils.exceptions.PlotlyError: The `figure_or_data` positional argument must be `dict`-like, `list`-like, or an instance of plotly.graph_objs.Figure

2025-02-26 21:05:13,023 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:05:13,050 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:05:31,166 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:05:31,189 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:05:51,953 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:05:51,982 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:05:51,990 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:05:52,169 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:05:52,179 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:05:52,179 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 21:05:52,188 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 21:05:52,188 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 21:05:52,292 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 21:05:52,292 - GeographGuardian - ERROR - Error in graph analytics: 'GraphVisualizer' object has no attribute 'visualize_communities'
2025-02-26 21:05:52,294 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 145, in render_graph_analytics_ui
    result = visualizer.visualize_communities(
AttributeError: 'GraphVisualizer' object has no attribute 'visualize_communities'

2025-02-26 21:06:28,572 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:06:28,572 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:06:28,595 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:06:28,595 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:06:31,704 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:06:31,704 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:06:31,732 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:06:31,732 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:06:31,737 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:06:31,737 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:06:31,767 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:06:31,767 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:06:31,776 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:06:31,776 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:06:31,777 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 21:06:31,777 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 21:06:31,785 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 21:06:31,785 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 21:06:31,785 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 21:06:31,785 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 21:06:31,846 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 21:06:31,846 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 21:06:31,854 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 21:06:31,854 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 21:14:12,499 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:12,499 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:12,499 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:12,521 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:12,521 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:12,521 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:16,848 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:16,848 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:16,848 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:16,873 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:16,873 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:16,873 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:14:16,878 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:14:16,878 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:14:16,878 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:14:16,915 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:14:16,915 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:14:16,915 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:14:16,925 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:14:16,925 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:14:16,925 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:14:16,926 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 21:14:16,926 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 21:14:16,926 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 21:14:16,932 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 21:14:16,932 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 21:14:16,932 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 21:14:16,932 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 21:14:16,932 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 21:14:16,932 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 21:14:16,985 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 21:14:16,985 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 21:14:16,985 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 21:14:16,990 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 21:14:16,990 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 21:14:16,990 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 21:15:09,753 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:09,753 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:09,753 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:09,780 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:09,780 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:09,780 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:17,930 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:17,930 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:17,930 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:17,956 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:17,956 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:17,956 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:15:17,961 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:15:17,961 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:15:17,961 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:15:17,992 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:15:17,992 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:15:17,992 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:15:18,000 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:15:18,000 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:15:18,000 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:15:18,011 - GeographGuardian - ERROR - Centrality analysis failed: non-success value returned from select_random_vertices: CUGRAPH_UNKNOWN_ERROR cuGraph failure at file=/opt/conda/conda-bld/work/cpp/src/structure/select_random_vertices_impl.hpp line=80: Invalid input arguments: select_count should not exceed the number of vertices if with_replacement == false.
Obtained 38 stack frames
#1 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: cugraph::logic_error::logic_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) +0x9d [0x7f73a2d28d6d]
#2 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: rmm::device_uvector<int> cugraph::select_random_vertices<int, int, false, false>(raft::handle_t const&, cugraph::graph_view_t<int, int, false, false, void> const&, std::optional<raft::span<int const, true, 18446744073709551615ul> >, raft::random::RngState&, unsigned long, bool, bool, bool) +0xce4 [0x7f73a6f5ffb4]
#3 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so(+0x22543d) [0x7f71e61a643d]
#4 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so: cugraph_select_random_vertices +0x34a [0x7f71e61a747a]
#5 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/select_random_vertices.cpython-310-x86_64-linux-gnu.so(+0x6903) [0x7f71e5d09903]
#6 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x6cfd) [0x7f71e5d16cfd]
#7 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x7573) [0x7f71e5d17573]
#8 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#9 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#10 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#11 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x146fb2) [0x5622baaa6fb2]
#12 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#13 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#14 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#15 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#16 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#17 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1cca8c) [0x5622bab2ca8c]
#18 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: PyEval_EvalCode +0x87 [0x5622bab2c9d7]
#19 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1d3c3b) [0x5622bab33c3b]
#20 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x13bd43) [0x5622baa9bd43]
#21 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#22 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#23 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#24 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#25 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#26 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#27 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#28 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#29 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x2c3e [0x5622baa8e6de]
#30 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#31 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#32 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#33 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#34 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#35 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21d052) [0x5622bab7d052]
#36 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21cfb4) [0x5622bab7cfb4]
#37 in /lib/x86_64-linux-gnu/libc.so.6(+0x9caa4) [0x7f748fa69aa4]
#38 in /lib/x86_64-linux-gnu/libc.so.6(+0x129c3c) [0x7f748faf6c3c]

2025-02-26 21:15:18,011 - GeographGuardian - ERROR - Centrality analysis failed: non-success value returned from select_random_vertices: CUGRAPH_UNKNOWN_ERROR cuGraph failure at file=/opt/conda/conda-bld/work/cpp/src/structure/select_random_vertices_impl.hpp line=80: Invalid input arguments: select_count should not exceed the number of vertices if with_replacement == false.
Obtained 38 stack frames
#1 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: cugraph::logic_error::logic_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) +0x9d [0x7f73a2d28d6d]
#2 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: rmm::device_uvector<int> cugraph::select_random_vertices<int, int, false, false>(raft::handle_t const&, cugraph::graph_view_t<int, int, false, false, void> const&, std::optional<raft::span<int const, true, 18446744073709551615ul> >, raft::random::RngState&, unsigned long, bool, bool, bool) +0xce4 [0x7f73a6f5ffb4]
#3 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so(+0x22543d) [0x7f71e61a643d]
#4 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so: cugraph_select_random_vertices +0x34a [0x7f71e61a747a]
#5 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/select_random_vertices.cpython-310-x86_64-linux-gnu.so(+0x6903) [0x7f71e5d09903]
#6 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x6cfd) [0x7f71e5d16cfd]
#7 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x7573) [0x7f71e5d17573]
#8 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#9 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#10 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#11 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x146fb2) [0x5622baaa6fb2]
#12 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#13 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#14 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#15 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#16 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#17 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1cca8c) [0x5622bab2ca8c]
#18 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: PyEval_EvalCode +0x87 [0x5622bab2c9d7]
#19 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1d3c3b) [0x5622bab33c3b]
#20 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x13bd43) [0x5622baa9bd43]
#21 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#22 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#23 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#24 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#25 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#26 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#27 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#28 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#29 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x2c3e [0x5622baa8e6de]
#30 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#31 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#32 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#33 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#34 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#35 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21d052) [0x5622bab7d052]
#36 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21cfb4) [0x5622bab7cfb4]
#37 in /lib/x86_64-linux-gnu/libc.so.6(+0x9caa4) [0x7f748fa69aa4]
#38 in /lib/x86_64-linux-gnu/libc.so.6(+0x129c3c) [0x7f748faf6c3c]

2025-02-26 21:15:18,011 - GeographGuardian - ERROR - Centrality analysis failed: non-success value returned from select_random_vertices: CUGRAPH_UNKNOWN_ERROR cuGraph failure at file=/opt/conda/conda-bld/work/cpp/src/structure/select_random_vertices_impl.hpp line=80: Invalid input arguments: select_count should not exceed the number of vertices if with_replacement == false.
Obtained 38 stack frames
#1 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: cugraph::logic_error::logic_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) +0x9d [0x7f73a2d28d6d]
#2 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: rmm::device_uvector<int> cugraph::select_random_vertices<int, int, false, false>(raft::handle_t const&, cugraph::graph_view_t<int, int, false, false, void> const&, std::optional<raft::span<int const, true, 18446744073709551615ul> >, raft::random::RngState&, unsigned long, bool, bool, bool) +0xce4 [0x7f73a6f5ffb4]
#3 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so(+0x22543d) [0x7f71e61a643d]
#4 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so: cugraph_select_random_vertices +0x34a [0x7f71e61a747a]
#5 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/select_random_vertices.cpython-310-x86_64-linux-gnu.so(+0x6903) [0x7f71e5d09903]
#6 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x6cfd) [0x7f71e5d16cfd]
#7 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x7573) [0x7f71e5d17573]
#8 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#9 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#10 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#11 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x146fb2) [0x5622baaa6fb2]
#12 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#13 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#14 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#15 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#16 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#17 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1cca8c) [0x5622bab2ca8c]
#18 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: PyEval_EvalCode +0x87 [0x5622bab2c9d7]
#19 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1d3c3b) [0x5622bab33c3b]
#20 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x13bd43) [0x5622baa9bd43]
#21 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#22 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#23 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#24 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#25 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#26 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#27 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#28 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#29 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x2c3e [0x5622baa8e6de]
#30 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#31 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#32 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#33 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#34 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#35 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21d052) [0x5622bab7d052]
#36 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21cfb4) [0x5622bab7cfb4]
#37 in /lib/x86_64-linux-gnu/libc.so.6(+0x9caa4) [0x7f748fa69aa4]
#38 in /lib/x86_64-linux-gnu/libc.so.6(+0x129c3c) [0x7f748faf6c3c]

2025-02-26 21:15:18,012 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/cugraph_processor.py", line 180, in run_centrality_analysis
    result = cugraph.betweenness_centrality(G, k=k)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/centrality/betweenness_centrality.py", line 175, in betweenness_centrality
    vertices, values = pylibcugraph_betweenness_centrality(
  File "betweenness_centrality.pyx", line 121, in pylibcugraph.betweenness_centrality.betweenness_centrality
  File "select_random_vertices.pyx", line 113, in pylibcugraph.select_random_vertices.select_random_vertices
  File "utils.pyx", line 53, in pylibcugraph.utils.assert_success
RuntimeError: non-success value returned from select_random_vertices: CUGRAPH_UNKNOWN_ERROR cuGraph failure at file=/opt/conda/conda-bld/work/cpp/src/structure/select_random_vertices_impl.hpp line=80: Invalid input arguments: select_count should not exceed the number of vertices if with_replacement == false.
Obtained 38 stack frames
#1 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: cugraph::logic_error::logic_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) +0x9d [0x7f73a2d28d6d]
#2 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: rmm::device_uvector<int> cugraph::select_random_vertices<int, int, false, false>(raft::handle_t const&, cugraph::graph_view_t<int, int, false, false, void> const&, std::optional<raft::span<int const, true, 18446744073709551615ul> >, raft::random::RngState&, unsigned long, bool, bool, bool) +0xce4 [0x7f73a6f5ffb4]
#3 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so(+0x22543d) [0x7f71e61a643d]
#4 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so: cugraph_select_random_vertices +0x34a [0x7f71e61a747a]
#5 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/select_random_vertices.cpython-310-x86_64-linux-gnu.so(+0x6903) [0x7f71e5d09903]
#6 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x6cfd) [0x7f71e5d16cfd]
#7 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x7573) [0x7f71e5d17573]
#8 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#9 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#10 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#11 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x146fb2) [0x5622baaa6fb2]
#12 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#13 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#14 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#15 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#16 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#17 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1cca8c) [0x5622bab2ca8c]
#18 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: PyEval_EvalCode +0x87 [0x5622bab2c9d7]
#19 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1d3c3b) [0x5622bab33c3b]
#20 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x13bd43) [0x5622baa9bd43]
#21 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#22 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#23 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#24 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#25 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#26 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#27 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#28 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#29 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x2c3e [0x5622baa8e6de]
#30 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#31 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#32 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#33 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#34 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#35 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21d052) [0x5622bab7d052]
#36 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21cfb4) [0x5622bab7cfb4]
#37 in /lib/x86_64-linux-gnu/libc.so.6(+0x9caa4) [0x7f748fa69aa4]
#38 in /lib/x86_64-linux-gnu/libc.so.6(+0x129c3c) [0x7f748faf6c3c]


2025-02-26 21:15:18,012 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/cugraph_processor.py", line 180, in run_centrality_analysis
    result = cugraph.betweenness_centrality(G, k=k)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/centrality/betweenness_centrality.py", line 175, in betweenness_centrality
    vertices, values = pylibcugraph_betweenness_centrality(
  File "betweenness_centrality.pyx", line 121, in pylibcugraph.betweenness_centrality.betweenness_centrality
  File "select_random_vertices.pyx", line 113, in pylibcugraph.select_random_vertices.select_random_vertices
  File "utils.pyx", line 53, in pylibcugraph.utils.assert_success
RuntimeError: non-success value returned from select_random_vertices: CUGRAPH_UNKNOWN_ERROR cuGraph failure at file=/opt/conda/conda-bld/work/cpp/src/structure/select_random_vertices_impl.hpp line=80: Invalid input arguments: select_count should not exceed the number of vertices if with_replacement == false.
Obtained 38 stack frames
#1 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: cugraph::logic_error::logic_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) +0x9d [0x7f73a2d28d6d]
#2 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: rmm::device_uvector<int> cugraph::select_random_vertices<int, int, false, false>(raft::handle_t const&, cugraph::graph_view_t<int, int, false, false, void> const&, std::optional<raft::span<int const, true, 18446744073709551615ul> >, raft::random::RngState&, unsigned long, bool, bool, bool) +0xce4 [0x7f73a6f5ffb4]
#3 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so(+0x22543d) [0x7f71e61a643d]
#4 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so: cugraph_select_random_vertices +0x34a [0x7f71e61a747a]
#5 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/select_random_vertices.cpython-310-x86_64-linux-gnu.so(+0x6903) [0x7f71e5d09903]
#6 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x6cfd) [0x7f71e5d16cfd]
#7 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x7573) [0x7f71e5d17573]
#8 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#9 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#10 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#11 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x146fb2) [0x5622baaa6fb2]
#12 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#13 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#14 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#15 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#16 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#17 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1cca8c) [0x5622bab2ca8c]
#18 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: PyEval_EvalCode +0x87 [0x5622bab2c9d7]
#19 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1d3c3b) [0x5622bab33c3b]
#20 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x13bd43) [0x5622baa9bd43]
#21 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#22 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#23 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#24 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#25 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#26 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#27 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#28 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#29 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x2c3e [0x5622baa8e6de]
#30 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#31 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#32 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#33 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#34 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#35 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21d052) [0x5622bab7d052]
#36 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21cfb4) [0x5622bab7cfb4]
#37 in /lib/x86_64-linux-gnu/libc.so.6(+0x9caa4) [0x7f748fa69aa4]
#38 in /lib/x86_64-linux-gnu/libc.so.6(+0x129c3c) [0x7f748faf6c3c]


2025-02-26 21:15:18,012 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/cugraph_processor.py", line 180, in run_centrality_analysis
    result = cugraph.betweenness_centrality(G, k=k)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/centrality/betweenness_centrality.py", line 175, in betweenness_centrality
    vertices, values = pylibcugraph_betweenness_centrality(
  File "betweenness_centrality.pyx", line 121, in pylibcugraph.betweenness_centrality.betweenness_centrality
  File "select_random_vertices.pyx", line 113, in pylibcugraph.select_random_vertices.select_random_vertices
  File "utils.pyx", line 53, in pylibcugraph.utils.assert_success
RuntimeError: non-success value returned from select_random_vertices: CUGRAPH_UNKNOWN_ERROR cuGraph failure at file=/opt/conda/conda-bld/work/cpp/src/structure/select_random_vertices_impl.hpp line=80: Invalid input arguments: select_count should not exceed the number of vertices if with_replacement == false.
Obtained 38 stack frames
#1 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: cugraph::logic_error::logic_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) +0x9d [0x7f73a2d28d6d]
#2 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/cugraph/structure/../../../../libcugraph.so: rmm::device_uvector<int> cugraph::select_random_vertices<int, int, false, false>(raft::handle_t const&, cugraph::graph_view_t<int, int, false, false, void> const&, std::optional<raft::span<int const, true, 18446744073709551615ul> >, raft::random::RngState&, unsigned long, bool, bool, bool) +0xce4 [0x7f73a6f5ffb4]
#3 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so(+0x22543d) [0x7f71e61a643d]
#4 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/../../../libcugraph_c.so: cugraph_select_random_vertices +0x34a [0x7f71e61a747a]
#5 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/select_random_vertices.cpython-310-x86_64-linux-gnu.so(+0x6903) [0x7f71e5d09903]
#6 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x6cfd) [0x7f71e5d16cfd]
#7 in /home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pylibcugraph/betweenness_centrality.cpython-310-x86_64-linux-gnu.so(+0x7573) [0x7f71e5d17573]
#8 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#9 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#10 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#11 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x146fb2) [0x5622baaa6fb2]
#12 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x1341 [0x5622baa8cde1]
#13 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#14 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#15 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#16 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#17 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1cca8c) [0x5622bab2ca8c]
#18 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: PyEval_EvalCode +0x87 [0x5622bab2c9d7]
#19 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x1d3c3b) [0x5622bab33c3b]
#20 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x13bd43) [0x5622baa9bd43]
#21 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#22 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#23 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#24 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#25 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x309 [0x5622baa8bda9]
#26 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#27 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#28 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#29 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x2c3e [0x5622baa8e6de]
#30 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#31 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#32 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyFunction_Vectorcall +0x6c [0x5622baa9bb7c]
#33 in /home/ramcovasu/miniconda3/envs/geograph/bin/python: _PyEval_EvalFrameDefault +0x6fd [0x5622baa8c19d]
#34 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x147234) [0x5622baaa7234]
#35 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21d052) [0x5622bab7d052]
#36 in /home/ramcovasu/miniconda3/envs/geograph/bin/python(+0x21cfb4) [0x5622bab7cfb4]
#37 in /lib/x86_64-linux-gnu/libc.so.6(+0x9caa4) [0x7f748fa69aa4]
#38 in /lib/x86_64-linux-gnu/libc.so.6(+0x129c3c) [0x7f748faf6c3c]


2025-02-26 21:20:35,971 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:35,971 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:35,971 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:35,971 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:35,998 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:35,998 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:35,998 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:35,998 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:44,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:44,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:44,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:44,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:44,157 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:44,157 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:44,157 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:44,157 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:46,766 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:46,766 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:46,766 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:46,766 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:46,790 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:46,790 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:46,790 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:46,790 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,252 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,252 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,252 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,252 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,280 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,280 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,280 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,280 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,459 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,459 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,459 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,459 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,484 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,484 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,484 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:47,484 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,397 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,397 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,397 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,397 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,421 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,421 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,421 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,421 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:20:50,426 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:20:50,426 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:20:50,426 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:20:50,426 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:20:50,458 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:20:50,458 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:20:50,458 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:20:50,458 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:20:50,467 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:20:50,467 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:20:50,467 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:20:50,467 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:20:50,469 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:20:50,469 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:20:50,469 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:20:50,469 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:20:50,470 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:20:50,470 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:20:50,470 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:20:50,470 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:20:50,553 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:20:50,553 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:20:50,553 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:20:50,553 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:21:01,666 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:01,666 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:01,666 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:01,666 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:01,697 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:01,697 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:01,697 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:01,697 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,330 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,330 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,330 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,330 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,358 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,358 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,358 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,358 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:21:04,363 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:21:04,363 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:21:04,363 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:21:04,363 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:21:04,395 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:21:04,395 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:21:04,395 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:21:04,395 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:21:04,406 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:21:04,406 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:21:04,406 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:21:04,406 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:21:04,408 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:21:04,408 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:21:04,408 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:21:04,408 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:21:04,408 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:21:04,408 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:21:04,408 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:21:04,408 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:21:04,448 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:21:04,448 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:21:04,448 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:21:04,448 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:29:42,935 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,935 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,935 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,935 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,935 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,960 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,960 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,960 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,960 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:42,960 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,938 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,938 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,938 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,938 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,938 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,963 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,963 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,963 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,963 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:51,963 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,019 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,019 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,019 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,019 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,019 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:56,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,134 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,158 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,158 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,158 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,158 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,158 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:29:57,163 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:29:57,163 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:29:57,163 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:29:57,163 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:29:57,163 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:29:57,190 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:29:57,190 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:29:57,190 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:29:57,190 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:29:57,190 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:29:57,201 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:29:57,201 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:29:57,201 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:29:57,201 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:29:57,201 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:29:57,254 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:29:57,254 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:29:57,254 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:29:57,254 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:29:57,254 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:29:57,255 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:29:57,255 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:29:57,255 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:29:57,255 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:29:57,255 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:29:57,296 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:29:57,296 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:29:57,296 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:29:57,296 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:29:57,296 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:29:57,296 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:29:57,296 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:29:57,296 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:29:57,296 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:29:57,296 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:29:57,297 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 708, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:29:57,297 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 708, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:29:57,297 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 708, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:29:57,297 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 708, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:29:57,297 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 708, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:30:06,733 - GeographGuardian - ERROR - Error in graph analytics: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype
2025-02-26 21:30:06,733 - GeographGuardian - ERROR - Error in graph analytics: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype
2025-02-26 21:30:06,733 - GeographGuardian - ERROR - Error in graph analytics: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype
2025-02-26 21:30:06,733 - GeographGuardian - ERROR - Error in graph analytics: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype
2025-02-26 21:30:06,733 - GeographGuardian - ERROR - Error in graph analytics: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype
2025-02-26 21:30:06,742 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 261, in render_graph_analytics_ui
    top_5 = result_df.nlargest(5, result_df.columns[1])
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/frame.py", line 7644, in nlargest
    return selectn.SelectNFrame(self, n=n, keep=keep, columns=columns).nlargest()
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 57, in nlargest
    return self.compute("nlargest")
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 201, in compute
    raise TypeError(
TypeError: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype

2025-02-26 21:30:06,742 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 261, in render_graph_analytics_ui
    top_5 = result_df.nlargest(5, result_df.columns[1])
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/frame.py", line 7644, in nlargest
    return selectn.SelectNFrame(self, n=n, keep=keep, columns=columns).nlargest()
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 57, in nlargest
    return self.compute("nlargest")
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 201, in compute
    raise TypeError(
TypeError: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype

2025-02-26 21:30:06,742 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 261, in render_graph_analytics_ui
    top_5 = result_df.nlargest(5, result_df.columns[1])
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/frame.py", line 7644, in nlargest
    return selectn.SelectNFrame(self, n=n, keep=keep, columns=columns).nlargest()
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 57, in nlargest
    return self.compute("nlargest")
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 201, in compute
    raise TypeError(
TypeError: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype

2025-02-26 21:30:06,742 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 261, in render_graph_analytics_ui
    top_5 = result_df.nlargest(5, result_df.columns[1])
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/frame.py", line 7644, in nlargest
    return selectn.SelectNFrame(self, n=n, keep=keep, columns=columns).nlargest()
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 57, in nlargest
    return self.compute("nlargest")
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 201, in compute
    raise TypeError(
TypeError: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype

2025-02-26 21:30:06,742 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 261, in render_graph_analytics_ui
    top_5 = result_df.nlargest(5, result_df.columns[1])
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/frame.py", line 7644, in nlargest
    return selectn.SelectNFrame(self, n=n, keep=keep, columns=columns).nlargest()
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 57, in nlargest
    return self.compute("nlargest")
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/pandas/core/methods/selectn.py", line 201, in compute
    raise TypeError(
TypeError: Column 'vertex' has dtype object, cannot use method 'nlargest' with this dtype

2025-02-26 21:35:19,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,159 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,159 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,159 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,159 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,159 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:19,159 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,142 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,142 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,142 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,142 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,142 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,142 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,169 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,169 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,169 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,169 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,169 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:23,169 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,569 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,569 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,569 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,569 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,569 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,569 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,595 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,595 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,595 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,595 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,595 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:25,595 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,398 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,398 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,398 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,398 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,398 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,398 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,426 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,426 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,426 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,426 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,426 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,426 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:35:26,431 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:35:26,431 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:35:26,431 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:35:26,431 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:35:26,431 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:35:26,431 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:35:26,464 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:35:26,464 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:35:26,464 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:35:26,464 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:35:26,464 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:35:26,464 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:35:26,472 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:35:26,472 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:35:26,472 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:35:26,472 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:35:26,472 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:35:26,472 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:35:26,524 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:35:26,524 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:35:26,524 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:35:26,524 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:35:26,524 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:35:26,524 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:35:26,525 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:35:26,525 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:35:26,525 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:35:26,525 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:35:26,525 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:35:26,525 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:35:26,567 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:35:26,567 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:35:26,567 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:35:26,567 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:35:26,567 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:35:26,567 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:35:26,568 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:35:26,568 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:35:26,568 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:35:26,568 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:35:26,568 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:35:26,568 - GeographGuardian - ERROR - Error visualizing centrality: Series.argsort() got an unexpected keyword argument 'ascending'
2025-02-26 21:35:26,569 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 728, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:35:26,569 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 728, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:35:26,569 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 728, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:35:26,569 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 728, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:35:26,569 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 728, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:35:26,569 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/graph_analytics/visualization.py", line 728, in visualize_centrality
    top_vertices = df.iloc[df[centrality_col].abs().argsort(ascending=False)[:top_n]]
TypeError: Series.argsort() got an unexpected keyword argument 'ascending'

2025-02-26 21:38:18,107 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,107 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,107 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,107 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,107 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,107 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,107 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,131 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,131 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,131 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,131 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,131 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,131 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:18,131 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,064 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,064 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,064 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,064 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,064 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,064 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,064 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,090 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,090 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,090 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,090 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,090 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,090 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:26,090 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,129 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,129 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,129 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,129 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,129 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,129 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,129 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,155 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,155 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,155 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,155 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,155 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,155 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:28,155 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,133 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,133 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,133 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,133 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,133 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,133 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,133 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,161 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,161 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,161 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,161 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,161 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,161 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,161 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:38:29,167 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:38:29,167 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:38:29,167 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:38:29,167 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:38:29,167 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:38:29,167 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:38:29,167 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:38:29,195 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:38:29,195 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:38:29,195 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:38:29,195 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:38:29,195 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:38:29,195 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:38:29,195 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:38:29,203 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:38:29,203 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:38:29,203 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:38:29,203 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:38:29,203 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:38:29,203 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:38:29,203 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:38:29,256 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:38:29,294 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:38:29,294 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:38:29,294 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:38:29,294 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:38:29,294 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:38:29,294 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:38:29,294 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:48,925 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,925 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,925 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,925 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,925 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,925 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,925 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,925 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,948 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,948 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,948 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,948 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,948 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,948 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,948 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:48,948 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,028 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,028 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,028 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,028 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,028 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,028 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,028 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,028 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,054 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,054 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,054 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,054 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,054 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,054 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,054 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:53,054 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,832 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,832 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,832 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,832 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,832 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,832 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,832 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,832 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,857 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,857 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,857 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,857 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,857 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,857 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,857 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,857 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:44:54,863 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:44:54,863 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:44:54,863 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:44:54,863 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:44:54,863 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:44:54,863 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:44:54,863 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:44:54,863 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:44:54,896 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:44:54,896 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:44:54,896 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:44:54,896 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:44:54,896 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:44:54,896 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:44:54,896 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:44:54,896 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:44:54,904 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:44:54,904 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:44:54,904 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:44:54,904 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:44:54,904 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:44:54,904 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:44:54,904 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:44:54,904 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:44:54,956 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:44:54,994 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:54,994 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:54,994 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:54,994 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:54,994 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:54,994 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:54,994 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:54,994 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:44:54,997 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:44:54,997 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:44:54,997 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:44:54,997 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:44:54,997 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:44:54,997 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:44:54,997 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:44:54,997 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:44:54,999 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:44:54,999 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:44:54,999 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:44:54,999 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:44:54,999 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:44:54,999 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:44:54,999 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:44:54,999 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,364 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:37,389 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:44,027 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,215 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,240 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,245 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,273 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,281 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,334 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,374 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,376 - GeographGuardian - INFO - Loaded 15 supplier names and 16 part names
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 21:57:46,379 - GeographGuardian - WARNING - All centrality scores are very similar. Adding small random variation for visualization.
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,423 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:28,449 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,017 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:32,044 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,710 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:36,737 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:45,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,939 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:05:46,964 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:20:24,555 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:20:24,575 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:20:30,548 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:20:30,572 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:24:43,790 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:24:43,814 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:24:57,862 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:24:57,887 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:39,554 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:39,554 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:39,578 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:39,578 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:40,766 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:40,766 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:40,795 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:40,795 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:41,242 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:41,242 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:41,266 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:27:41,266 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:43,705 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:43,705 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:43,705 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:43,729 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:43,729 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:43,729 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:51,510 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:51,510 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:51,510 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:51,536 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:51,536 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:51,536 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:54,157 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:54,157 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:54,157 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:54,181 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:54,181 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:54,181 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:30:54,190 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:30:54,190 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:30:54,190 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:30:54,372 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:30:54,372 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:30:54,372 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:30:54,385 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:30:54,385 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:30:54,385 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:30:54,438 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:30:54,438 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:30:54,438 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:30:54,438 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:30:54,438 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:30:54,438 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:30:54,525 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:30:54,525 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:30:54,525 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:30:54,527 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:30:54,527 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:30:54,527 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:31:02,887 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:31:02,887 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:31:02,887 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:31:02,889 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:31:02,889 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:31:02,889 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:33:47,451 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:47,451 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:47,451 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:47,451 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:47,478 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:47,478 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:47,478 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:47,478 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:52,059 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:52,059 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:52,059 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:52,059 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:52,085 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:52,085 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:52,085 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:52,085 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,731 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,731 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,731 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,731 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,757 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,757 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,757 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,757 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:33:59,762 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:33:59,762 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:33:59,762 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:33:59,762 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:33:59,796 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:33:59,796 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:33:59,796 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:33:59,796 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:33:59,806 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:33:59,806 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:33:59,806 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:33:59,806 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:33:59,807 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:33:59,807 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:33:59,807 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:33:59,807 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:33:59,807 - GeographGuardian - WARNING - Adjusting sample size from 100 to 30 to match graph size
2025-02-26 22:33:59,807 - GeographGuardian - WARNING - Adjusting sample size from 100 to 30 to match graph size
2025-02-26 22:33:59,807 - GeographGuardian - WARNING - Adjusting sample size from 100 to 30 to match graph size
2025-02-26 22:33:59,807 - GeographGuardian - WARNING - Adjusting sample size from 100 to 30 to match graph size
2025-02-26 22:33:59,807 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:33:59,807 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:33:59,807 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:33:59,807 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:33:59,851 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:33:59,851 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:33:59,851 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:33:59,851 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:33:59,853 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:33:59,853 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:33:59,853 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:33:59,853 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:47:16,350 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,350 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,350 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,350 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,350 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,376 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,376 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,376 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,376 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:16,376 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,734 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,734 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,734 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,734 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,734 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,759 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,759 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,759 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,759 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:20,759 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,548 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,548 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,548 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,548 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,548 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,576 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,576 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,576 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,576 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,576 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:47:22,582 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:47:22,582 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:47:22,582 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:47:22,582 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:47:22,582 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:47:22,627 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:47:22,627 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:47:22,627 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:47:22,627 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:47:22,627 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:47:22,638 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:47:22,638 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:47:22,638 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:47:22,638 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:47:22,638 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:47:22,690 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:47:22,690 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:47:22,690 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:47:22,690 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:47:22,690 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:47:22,691 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:47:22,691 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:47:22,691 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:47:22,691 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:47:22,691 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:47:22,741 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:47:22,741 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:47:22,741 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:47:22,741 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:47:22,741 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:47:22,743 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:47:22,743 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:47:22,743 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:47:22,743 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:47:22,743 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:47:22,752 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:47:22,752 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:47:22,752 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:47:22,752 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:47:22,752 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:47:22,755 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:47:22,755 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:47:22,755 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:47:22,755 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:47:22,755 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:48:19,168 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:48:19,193 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:48:22,723 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:48:22,751 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:48:25,429 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:48:25,456 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:48:25,461 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:48:25,559 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:48:25,565 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:48:25,617 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:48:25,617 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:48:25,668 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:48:25,670 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:48:25,692 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:48:25,693 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:50:51,708 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:51,708 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:51,729 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:51,729 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:54,993 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:54,993 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:55,018 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:55,018 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:55,847 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:55,847 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:55,870 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:55,870 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:50:55,876 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:50:55,876 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:50:55,906 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:50:55,906 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:50:55,914 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:50:55,914 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:50:55,967 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:50:55,967 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:50:55,968 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:50:55,968 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:50:56,011 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:50:56,011 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:50:56,013 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:50:56,013 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:51:03,818 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:51:03,818 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:51:03,819 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:51:03,819 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:56:15,182 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:15,182 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:15,205 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:15,205 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:18,839 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:18,839 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:18,863 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:18,863 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:19,706 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:19,706 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:19,732 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:19,732 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 22:56:19,737 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:56:19,737 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 22:56:19,771 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:56:19,771 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 22:56:19,779 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:56:19,779 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 22:56:19,832 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:56:19,832 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 22:56:19,833 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:56:19,833 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 22:56:19,875 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:56:19,875 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 22:56:19,876 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:56:19,876 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 22:56:29,825 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:56:29,825 - GeographGuardian - ERROR - Error in graph analytics: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.
2025-02-26 22:56:29,825 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 22:56:29,825 - GeographGuardian - ERROR - Traceback (most recent call last):
  File "/home/ramcovasu/hackathon/geograph-guardian/src/streamlit/graph_analytics_ui.py", line 299, in render_graph_analytics_ui
    st.plotly_chart(fig, use_container_width=True)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 410, in wrapped_func
    result = non_optional_func(*args, **kwargs)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/plotly_chart.py", line 509, in plotly_chart
    plotly_chart_proto.id = compute_and_register_element_id(
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 225, in compute_and_register_element_id
    _register_element_id(ctx, element_type, element_id)
  File "/home/ramcovasu/miniconda3/envs/geograph/lib/python3.10/site-packages/streamlit/elements/lib/utils.py", line 131, in _register_element_id
    raise StreamlitDuplicateElementId(element_type)
streamlit.errors.StreamlitDuplicateElementId: There are multiple `plotly_chart` elements with the same auto-generated ID. When this element is created, it is assigned an internal ID based on the element type and provided parameters. Multiple elements with the same type and parameters will cause this error.

To fix this error, please pass a unique `key` argument to the `plotly_chart` element.

2025-02-26 23:05:59,658 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:05:59,658 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:05:59,658 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:05:59,680 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:05:59,680 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:05:59,680 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:03,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:03,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:03,529 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:03,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:03,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:03,553 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:05,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:05,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:05,003 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:05,076 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:05,076 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:05,076 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:05,095 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:05,095 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:05,095 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:05,132 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:05,132 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:05,132 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:05,141 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:05,141 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:05,141 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:05,193 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 23:06:05,193 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 23:06:05,193 - GeographGuardian - INFO - Graph has 30 vertices
2025-02-26 23:06:05,194 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 23:06:05,194 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 23:06:05,194 - GeographGuardian - INFO - Running betweenness centrality with k=30
2025-02-26 23:06:05,240 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 23:06:05,240 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 23:06:05,240 - GeographGuardian - INFO - Betweenness centrality computed successfully
2025-02-26 23:06:05,241 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 23:06:05,241 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 23:06:05,241 - GeographGuardian - INFO - Loaded 15 supplier names
2025-02-26 23:06:26,659 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:26,659 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:26,659 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:26,685 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:26,685 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:26,685 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:28,110 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:28,110 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:28,110 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:28,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:28,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:28,135 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:28,139 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:28,139 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:28,139 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:28,171 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:28,171 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:28,171 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:28,178 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:28,178 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:28,178 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:28,178 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 23:06:28,178 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 23:06:28,178 - GeographGuardian - INFO - Converting directed graph to undirected for community detection
2025-02-26 23:06:28,187 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 23:06:28,187 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 23:06:28,187 - GeographGuardian - INFO - Edge DataFrame columns: ['source', 'target']
2025-02-26 23:06:28,187 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 23:06:28,187 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 23:06:28,187 - GeographGuardian - WARNING - Using columns source and target as source and destination
2025-02-26 23:06:28,297 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 23:06:28,297 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 23:06:28,297 - GeographGuardian - INFO - Louvain completed with modularity: 0.8298611044883728
2025-02-26 23:06:28,303 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 23:06:28,303 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 23:06:28,303 - GeographGuardian - WARNING - Could not identify key entities: could not convert string to float: 'A'
2025-02-26 23:06:50,770 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:50,770 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:50,770 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:50,797 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:50,797 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:50,797 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:53,008 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:53,008 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:53,008 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:53,034 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:53,034 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:53,034 - GeographGuardian - INFO - CUDA is available for graph processing
2025-02-26 23:06:53,039 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:53,039 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:53,039 - GeographGuardian - INFO - Prepared supplier-part graph with 24 edges
2025-02-26 23:06:53,072 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:53,072 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:53,072 - GeographGuardian - INFO - Created cuGraph graph with 24 edges
2025-02-26 23:06:53,080 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:53,080 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:53,080 - GeographGuardian - INFO - Graph stats: 30 vertices, 24 edges
2025-02-26 23:06:53,100 - GeographGuardian - ERROR - Error creating network graph: Invalid property specified for object of type plotly.graph_objs.scatter.marker.ColorBar: 'titleside'

Did you mean "title"?

    Valid properties:
        bgcolor
            Sets the color of padded area.
        bordercolor
            Sets the axis line color.
        borderwidth
            Sets the width (in px) or the border enclosing this
            color bar.
        dtick
            Sets the step in-between ticks on this axis. Use with
            `tick0`. Must be a positive number, or special strings
            available to "log" and "date" axes. If the axis `type`
            is "log", then ticks are set every 10^(n*dtick) where n
            is the tick number. For example, to set a tick mark at
            1, 10, 100, 1000, ... set dtick to 1. To set tick marks
            at 1, 100, 10000, ... set dtick to 2. To set tick marks
            at 1, 5, 25, 125, 625, 3125, ... set dtick to
            log_10(5), or 0.69897000433. "log" has several special
            values; "L<f>", where `f` is a positive number, gives
            ticks linearly spaced in value (but not position). For
            example `tick0` = 0.1, `dtick` = "L0.5" will put ticks
            at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus
            small digits between, use "D1" (all digits) or "D2"
            (only 2 and 5). `tick0` is ignored for "D1" and "D2".
            If the axis `type` is "date", then you must convert the
            time to milliseconds. For example, to set the interval
            between ticks to one day, set `dtick` to 86400000.0.
            "date" also has special values "M<n>" gives ticks
            spaced by a number of months. `n` must be a positive
            integer. To set ticks on the 15th of every third month,
            set `tick0` to "2000-01-15" and `dtick` to "M3". To set
            ticks every 4 years, set `dtick` to "M48"
        exponentformat
            Determines a formatting rule for the tick exponents.
            For example, consider the number 1,000,000,000. If
            "none", it appears as 1,000,000,000. If "e", 1e+9. If
            "E", 1E+9. If "power", 1x10^9 (with 9 in a super
            script). If "SI", 1G. If "B", 1B.
        labelalias
            Replacement text for specific tick or hover labels. For
            example using {US: 'USA', CA: 'Canada'} changes US to
            USA and CA to Canada. The labels we would have shown
            must match the keys exactly, after adding any
            tickprefix or ticksuffix. For negative numbers the
            minus sign symbol used (U+2212) is wider than the
            regular ascii dash. That means you need to use −1
            instead of -1. labelalias can be used with any axis
            type, and both keys (if needed) and values (if desired)
            can include html-like tags or MathJax.
        len
            Sets the length of the color bar This measure excludes
            the padding of both ends. That is, the color bar length
            is this length minus the padding on both ends.
        lenmode
            Determines whether this color bar's length (i.e. the
            measure in the color variation direction) is set in
            units of plot "fraction" or in *pixels. Use `len` to
            set the value.
        minexponent
            Hide SI prefix for 10^n if |n| is below this number.
            This only has an effect when `tickformat` is "SI" or
            "B".
        nticks
            Specifies the maximum number of ticks for the
            particular axis. The actual number of ticks will be
            chosen automatically to be less than or equal to
            `nticks`. Has an effect only if `tickmode` is set to
            "auto".
        orientation
            Sets the orientation of the colorbar.
        outlinecolor
            Sets the axis line color.
        outlinewidth
            Sets the width (in px) of the axis line.
        separatethousands
            If "true", even 4-digit integers are separated
        showexponent
            If "all", all exponents are shown besides their
            significands. If "first", only the exponent of the
            first tick is shown. If "last", only the exponent of
            the last tick is shown. If "none", no exponents appear.
        showticklabels
            Determines whether or not the tick labels are drawn.
        showtickprefix
            If "all", all tick labels are displayed with a prefix.
            If "first", only the first tick is displayed with a
            prefix. If "last", only the last tick is displayed with
            a suffix. If "none", tick prefixes are hidden.
        showticksuffix
            Same as `showtickprefix` but for tick suffixes.
        thickness
            Sets the thickness of the color bar This measure
            excludes the size of the padding, ticks and labels.
        thicknessmode
            Determines whether this color bar's thickness (i.e. the
            measure in the constant color direction) is set in
            units of plot "fraction" or in "pixels". Use
            `thickness` to set the value.
        tick0
            Sets the placement of the first tick on this axis. Use
            with `dtick`. If the axis `type` is "log", then you
            must take the log of your starting tick (e.g. to set
            the starting tick to 100, set the `tick0` to 2) except
            when `dtick`=*L<f>* (see `dtick` for more info). If the
            axis `type` is "date", it should be a date string, like
            date data. If the axis `type` is "category", it should
            be a number, using the scale where each category is
            assigned a serial number from zero in the order it
            appears.
        tickangle
            Sets the angle of the tick labels with respect to the
            horizontal. For example, a `tickangle` of -90 draws the
            tick labels vertically.
        tickcolor
            Sets the tick color.
        tickfont
            Sets the color bar's tick label font
        tickformat
            Sets the tick label formatting rule using d3 formatting
            mini-languages which are very similar to those in
            Python. For numbers, see:
            https://github.com/d3/d3-format/tree/v1.4.5#d3-format.
            And for dates see: https://github.com/d3/d3-time-
            format/tree/v2.2.3#locale_format. We add two items to
            d3's date formatter: "%h" for half of the year as a
            decimal number as well as "%{n}f" for fractional
            seconds with n digits. For example, *2016-10-13
            09:15:23.456* with tickformat "%H~%M~%S.%2f" would
            display "09~15~23.46"
        tickformatstops
            A tuple of :class:`plotly.graph_objects.scatter.marker.
            colorbar.Tickformatstop` instances or dicts with
            compatible properties
        tickformatstopdefaults
            When used in a template (as layout.template.data.scatte
            r.marker.colorbar.tickformatstopdefaults), sets the
            default property values to use for elements of
            scatter.marker.colorbar.tickformatstops
        ticklabeloverflow
            Determines how we handle tick labels that would
            overflow either the graph div or the domain of the
            axis. The default value for inside tick labels is *hide
            past domain*. In other cases the default is *hide past
            div*.
        ticklabelposition
            Determines where tick labels are drawn relative to the
            ticks. Left and right options are used when
            `orientation` is "h", top and bottom when `orientation`
            is "v".
        ticklabelstep
            Sets the spacing between tick labels as compared to the
            spacing between ticks. A value of 1 (default) means
            each tick gets a label. A value of 2 means shows every
            2nd label. A larger value n means only every nth tick
            is labeled. `tick0` determines which labels are shown.
            Not implemented for axes with `type` "log" or
            "multicategory", or when `tickmode` is "array".
        ticklen
            Sets the tick length (in px).
        tickmode
            Sets the tick mode for this axis. If "auto", the number
            of ticks is set via `nticks`. If "linear", the
            placement of the ticks is determined by a starting
            position `tick0` and a tick step `dtick` ("linear" is
            the default value if `tick0` and `dtick` are provided).
            If "array", the placement of the ticks is set via
            `tickvals` and the tick text is `ticktext`. ("array" is
            the default value if `tickvals` is provided).
        tickprefix
            Sets a tick label prefix.
        ticks
            Determines whether ticks are drawn or not. If "", this
            axis' ticks are not drawn. If "outside" ("inside"),
            this axis' are drawn outside (inside) the axis lines.
        ticksuffix
            Sets a tick label suffix.
        ticktext
            Sets the text displayed at the ticks position via
            `tickvals`. Only has an effect if `tickmode` is set to
            "array". Used with `tickvals`.
        ticktextsrc
            Sets the source reference on Chart Studio Cloud for
            `ticktext`.
        tickvals
            Sets the values at which ticks on this axis appear.
            Only has an effect if `tickmode` is set to "array".
            Used with `ticktext`.
        tickvalssrc
            Sets the source reference on Chart Studio Cloud for
            `tickvals`.
        tickwidth
            Sets the tick width (in px).
        title
            :class:`plotly.graph_objects.scatter.marker.colorbar.Ti
            tle` instance or dict with compatible properties
        x
            Sets the x position with respect to `xref` of the color
            bar (in plot fraction). When `xref` is "paper",
            defaults to 1.02 when `orientation` is "v" and 0.5 when
            `orientation` is "h". When `xref` is "container",
            defaults to 1 when `orientation` is "v" and 0.5 when
            `orientation` is "h". Must be between 0 and 1 if `xref`
            is "container" and between "-2" and 3 if `xref` is
            "paper".
        xanchor
            Sets this color bar's horizontal position anchor. This
            anchor binds the `x` position to the "left", "center"
            or "right" of the color bar. Defaults to "left" when
            `orientation` is "v" and "center" when `orientation` is
            "h".
        xpad
            Sets the amount of padding (in px) along the x
            direction.
        xref
            Sets the container `x` refers to. "container" spans the
            entire `width` of the plot. "paper" refers to the width
            of the plotting area only.
        y
            Sets the y position with respect to `yref` of the color
            bar (in plot fraction). When `yref` is "paper",
            defaults to 0.5 when `orientation` is "v" and 1.02 when
            `orientation` is "h". When `yref` is "container",
            defaults to 0.5 when `orientation` is "v" and 1 when
            `orientation` is "h". Must be between 0 and 1 if `yref`
            is "container" and between "-2" and 3 if `yref` is
            "paper".
        yanchor
            Sets this color bar's vertical position anchor This
            anchor binds the `y` position to the "top", "middle" or
            "bottom" of the color bar. Defaults to "middle" when
            `orientation` is "v" and "bottom" when `orientation` is
            "h".
        ypad
            Sets the amount of padding (in px) along the y
            direction.
        yref
            Sets the container `y` refers to. "container" spans the
            entire `height` of the plot. "paper" refers to the
            height of the plotting area only.
        
Did you mean "title"?

Bad property path:
titleside
^^^^^^^^^
2025-02-26 23:06:53,100 - GeographGuardian - ERROR - Error creating network graph: Invalid property specified for object of type plotly.graph_objs.scatter.marker.ColorBar: 'titleside'

Did you mean "title"?

    Valid properties:
        bgcolor
            Sets the color of padded area.
        bordercolor
            Sets the axis line color.
        borderwidth
            Sets the width (in px) or the border enclosing this
            color bar.
        dtick
            Sets the step in-between ticks on this axis. Use with
            `tick0`. Must be a positive number, or special strings
            available to "log" and "date" axes. If the axis `type`
            is "log", then ticks are set every 10^(n*dtick) where n
            is the tick number. For example, to set a tick mark at
            1, 10, 100, 1000, ... set dtick to 1. To set tick marks
            at 1, 100, 10000, ... set dtick to 2. To set tick marks
            at 1, 5, 25, 125, 625, 3125, ... set dtick to
            log_10(5), or 0.69897000433. "log" has several special
            values; "L<f>", where `f` is a positive number, gives
            ticks linearly spaced in value (but not position). For
            example `tick0` = 0.1, `dtick` = "L0.5" will put ticks
            at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus
            small digits between, use "D1" (all digits) or "D2"
            (only 2 and 5). `tick0` is ignored for "D1" and "D2".
            If the axis `type` is "date", then you must convert the
            time to milliseconds. For example, to set the interval
            between ticks to one day, set `dtick` to 86400000.0.
            "date" also has special values "M<n>" gives ticks
            spaced by a number of months. `n` must be a positive
            integer. To set ticks on the 15th of every third month,
            set `tick0` to "2000-01-15" and `dtick` to "M3". To set
            ticks every 4 years, set `dtick` to "M48"
        exponentformat
            Determines a formatting rule for the tick exponents.
            For example, consider the number 1,000,000,000. If
            "none", it appears as 1,000,000,000. If "e", 1e+9. If
            "E", 1E+9. If "power", 1x10^9 (with 9 in a super
            script). If "SI", 1G. If "B", 1B.
        labelalias
            Replacement text for specific tick or hover labels. For
            example using {US: 'USA', CA: 'Canada'} changes US to
            USA and CA to Canada. The labels we would have shown
            must match the keys exactly, after adding any
            tickprefix or ticksuffix. For negative numbers the
            minus sign symbol used (U+2212) is wider than the
            regular ascii dash. That means you need to use −1
            instead of -1. labelalias can be used with any axis
            type, and both keys (if needed) and values (if desired)
            can include html-like tags or MathJax.
        len
            Sets the length of the color bar This measure excludes
            the padding of both ends. That is, the color bar length
            is this length minus the padding on both ends.
        lenmode
            Determines whether this color bar's length (i.e. the
            measure in the color variation direction) is set in
            units of plot "fraction" or in *pixels. Use `len` to
            set the value.
        minexponent
            Hide SI prefix for 10^n if |n| is below this number.
            This only has an effect when `tickformat` is "SI" or
            "B".
        nticks
            Specifies the maximum number of ticks for the
            particular axis. The actual number of ticks will be
            chosen automatically to be less than or equal to
            `nticks`. Has an effect only if `tickmode` is set to
            "auto".
        orientation
            Sets the orientation of the colorbar.
        outlinecolor
            Sets the axis line color.
        outlinewidth
            Sets the width (in px) of the axis line.
        separatethousands
            If "true", even 4-digit integers are separated
        showexponent
            If "all", all exponents are shown besides their
            significands. If "first", only the exponent of the
            first tick is shown. If "last", only the exponent of
            the last tick is shown. If "none", no exponents appear.
        showticklabels
            Determines whether or not the tick labels are drawn.
        showtickprefix
            If "all", all tick labels are displayed with a prefix.
            If "first", only the first tick is displayed with a
            prefix. If "last", only the last tick is displayed with
            a suffix. If "none", tick prefixes are hidden.
        showticksuffix
            Same as `showtickprefix` but for tick suffixes.
        thickness
            Sets the thickness of the color bar This measure
            excludes the size of the padding, ticks and labels.
        thicknessmode
            Determines whether this color bar's thickness (i.e. the
            measure in the constant color direction) is set in
            units of plot "fraction" or in "pixels". Use
            `thickness` to set the value.
        tick0
            Sets the placement of the first tick on this axis. Use
            with `dtick`. If the axis `type` is "log", then you
            must take the log of your starting tick (e.g. to set
            the starting tick to 100, set the `tick0` to 2) except
            when `dtick`=*L<f>* (see `dtick` for more info). If the
            axis `type` is "date", it should be a date string, like
            date data. If the axis `type` is "category", it should
            be a number, using the scale where each category is
            assigned a serial number from zero in the order it
            appears.
        tickangle
            Sets the angle of the tick labels with respect to the
            horizontal. For example, a `tickangle` of -90 draws the
            tick labels vertically.
        tickcolor
            Sets the tick color.
        tickfont
            Sets the color bar's tick label font
        tickformat
            Sets the tick label formatting rule using d3 formatting
            mini-languages which are very similar to those in
            Python. For numbers, see:
            https://github.com/d3/d3-format/tree/v1.4.5#d3-format.
            And for dates see: https://github.com/d3/d3-time-
            format/tree/v2.2.3#locale_format. We add two items to
            d3's date formatter: "%h" for half of the year as a
            decimal number as well as "%{n}f" for fractional
            seconds with n digits. For example, *2016-10-13
            09:15:23.456* with tickformat "%H~%M~%S.%2f" would
            display "09~15~23.46"
        tickformatstops
            A tuple of :class:`plotly.graph_objects.scatter.marker.
            colorbar.Tickformatstop` instances or dicts with
            compatible properties
        tickformatstopdefaults
            When used in a template (as layout.template.data.scatte
            r.marker.colorbar.tickformatstopdefaults), sets the
            default property values to use for elements of
            scatter.marker.colorbar.tickformatstops
        ticklabeloverflow
            Determines how we handle tick labels that would
            overflow either the graph div or the domain of the
            axis. The default value for inside tick labels is *hide
            past domain*. In other cases the default is *hide past
            div*.
        ticklabelposition
            Determines where tick labels are drawn relative to the
            ticks. Left and right options are used when
            `orientation` is "h", top and bottom when `orientation`
            is "v".
        ticklabelstep
            Sets the spacing between tick labels as compared to the
            spacing between ticks. A value of 1 (default) means
            each tick gets a label. A value of 2 means shows every
            2nd label. A larger value n means only every nth tick
            is labeled. `tick0` determines which labels are shown.
            Not implemented for axes with `type` "log" or
            "multicategory", or when `tickmode` is "array".
        ticklen
            Sets the tick length (in px).
        tickmode
            Sets the tick mode for this axis. If "auto", the number
            of ticks is set via `nticks`. If "linear", the
            placement of the ticks is determined by a starting
            position `tick0` and a tick step `dtick` ("linear" is
            the default value if `tick0` and `dtick` are provided).
            If "array", the placement of the ticks is set via
            `tickvals` and the tick text is `ticktext`. ("array" is
            the default value if `tickvals` is provided).
        tickprefix
            Sets a tick label prefix.
        ticks
            Determines whether ticks are drawn or not. If "", this
            axis' ticks are not drawn. If "outside" ("inside"),
            this axis' are drawn outside (inside) the axis lines.
        ticksuffix
            Sets a tick label suffix.
        ticktext
            Sets the text displayed at the ticks position via
            `tickvals`. Only has an effect if `tickmode` is set to
            "array". Used with `tickvals`.
        ticktextsrc
            Sets the source reference on Chart Studio Cloud for
            `ticktext`.
        tickvals
            Sets the values at which ticks on this axis appear.
            Only has an effect if `tickmode` is set to "array".
            Used with `ticktext`.
        tickvalssrc
            Sets the source reference on Chart Studio Cloud for
            `tickvals`.
        tickwidth
            Sets the tick width (in px).
        title
            :class:`plotly.graph_objects.scatter.marker.colorbar.Ti
            tle` instance or dict with compatible properties
        x
            Sets the x position with respect to `xref` of the color
            bar (in plot fraction). When `xref` is "paper",
            defaults to 1.02 when `orientation` is "v" and 0.5 when
            `orientation` is "h". When `xref` is "container",
            defaults to 1 when `orientation` is "v" and 0.5 when
            `orientation` is "h". Must be between 0 and 1 if `xref`
            is "container" and between "-2" and 3 if `xref` is
            "paper".
        xanchor
            Sets this color bar's horizontal position anchor. This
            anchor binds the `x` position to the "left", "center"
            or "right" of the color bar. Defaults to "left" when
            `orientation` is "v" and "center" when `orientation` is
            "h".
        xpad
            Sets the amount of padding (in px) along the x
            direction.
        xref
            Sets the container `x` refers to. "container" spans the
            entire `width` of the plot. "paper" refers to the width
            of the plotting area only.
        y
            Sets the y position with respect to `yref` of the color
            bar (in plot fraction). When `yref` is "paper",
            defaults to 0.5 when `orientation` is "v" and 1.02 when
            `orientation` is "h". When `yref` is "container",
            defaults to 0.5 when `orientation` is "v" and 1 when
            `orientation` is "h". Must be between 0 and 1 if `yref`
            is "container" and between "-2" and 3 if `yref` is
            "paper".
        yanchor
            Sets this color bar's vertical position anchor This
            anchor binds the `y` position to the "top", "middle" or
            "bottom" of the color bar. Defaults to "middle" when
            `orientation` is "v" and "bottom" when `orientation` is
            "h".
        ypad
            Sets the amount of padding (in px) along the y
            direction.
        yref
            Sets the container `y` refers to. "container" spans the
            entire `height` of the plot. "paper" refers to the
            height of the plotting area only.
        
Did you mean "title"?

Bad property path:
titleside
^^^^^^^^^
2025-02-26 23:06:53,100 - GeographGuardian - ERROR - Error creating network graph: Invalid property specified for object of type plotly.graph_objs.scatter.marker.ColorBar: 'titleside'

Did you mean "title"?

    Valid properties:
        bgcolor
            Sets the color of padded area.
        bordercolor
            Sets the axis line color.
        borderwidth
            Sets the width (in px) or the border enclosing this
            color bar.
        dtick
            Sets the step in-between ticks on this axis. Use with
            `tick0`. Must be a positive number, or special strings
            available to "log" and "date" axes. If the axis `type`
            is "log", then ticks are set every 10^(n*dtick) where n
            is the tick number. For example, to set a tick mark at
            1, 10, 100, 1000, ... set dtick to 1. To set tick marks
            at 1, 100, 10000, ... set dtick to 2. To set tick marks
            at 1, 5, 25, 125, 625, 3125, ... set dtick to
            log_10(5), or 0.69897000433. "log" has several special
            values; "L<f>", where `f` is a positive number, gives
            ticks linearly spaced in value (but not position). For
            example `tick0` = 0.1, `dtick` = "L0.5" will put ticks
            at 0.1, 0.6, 1.1, 1.6 etc. To show powers of 10 plus
            small digits between, use "D1" (all digits) or "D2"
            (only 2 and 5). `tick0` is ignored for "D1" and "D2".
            If the axis `type` is "date", then you must convert the
            time to milliseconds. For example, to set the interval
            between ticks to one day, set `dtick` to 86400000.0.
            "date" also has special values "M<n>" gives ticks
            spaced by a number of months. `n` must be a positive
            integer. To set ticks on the 15th of every third month,
            set `tick0` to "2000-01-15" and `dtick` to "M3". To set
            ticks every 4 years, set `dtick` to "M48"
        exponentformat
            Determines a formatting rule for the tick exponents.
            For example, consider the number 1,000,000,000. If
            "none", it appears as 1,000,000,000. If "e", 1e+9. If
            "E", 1E+9. If "power", 1x10^9 (with 9 in a super
            script). If "SI", 1G. If "B", 1B.
        labelalias
            Replacement text for specific tick or hover labels. For
            example using {US: 'USA', CA: 'Canada'} changes US to
            USA and CA to Canada. The labels we would have shown
            must match the keys exactly, after adding any
            tickprefix or ticksuffix. For negative numbers the
            minus sign symbol used (U+2212) is wider than the
            regular ascii dash. That means you need to use −1
            instead of -1. labelalias can be used with any axis
            type, and both keys (if needed) and values (if desired)
            can include html-like tags or MathJax.
        len
            Sets the length of the color bar This measure excludes
            the padding of both ends. That is, the color bar length
            is this length minus the padding on both ends.
        lenmode
            Determines whether this color bar's length (i.e. the
            measure in the color variation direction) is set in
            units of plot "fraction" or in *pixels. Use `len` to
            set the value.
        minexponent
            Hide SI prefix for 10^n if |n| is below this number.
            This only has an effect when `tickformat` is "SI" or
            "B".
        nticks
            Specifies the maximum number of ticks for the
            particular axis. The actual number of ticks will be
            chosen automatically to be less than or equal to
            `nticks`. Has an effect only if `tickmode` is set to
            "auto".
        orientation
            Sets the orientation of the colorbar.
        outlinecolor
            Sets the axis line color.
        outlinewidth
            Sets the width (in px) of the axis line.
        separatethousands
            If "true", even 4-digit integers are separated
        showexponent
            If "all", all exponents are shown besides their
            significands. If "first", only the exponent of the
            first tick is shown. If "last", only the exponent of
            the last tick is shown. If "none", no exponents appear.
        showticklabels
            Determines whether or not the tick labels are drawn.
        showtickprefix
            If "all", all tick labels are displayed with a prefix.
            If "first", only the first tick is displayed with a
            prefix. If "last", only the last tick is displayed with
            a suffix. If "none", tick prefixes are hidden.
        showticksuffix
            Same as `showtickprefix` but for tick suffixes.
        thickness
            Sets the thickness of the color bar This measure
            excludes the size of the padding, ticks and labels.
        thicknessmode
            Determines whether this color bar's thickness (i.e. the
            measure in the constant color direction) is set in
            units of plot "fraction" or in "pixels". Use
            `thickness` to set the value.
        tick0
            Sets the placement of the first tick on this axis. Use
            with `dtick`. If the axis `type` is "log", then you
            must take the log of your starting tick (e.g. to set
            the starting tick to 100, set the `tick0` to 2) except
            when `dtick`=*L<f>* (see `dtick` for more info). If the
            axis `type` is "date", it should be a date string, like
            date data. If the axis `type` is "category", it should
            be a number, using the scale where each category is
            assigned a serial number from zero in the order it
            appears.
        tickangle
            Sets the angle of the tick labels with respect to the
            horizontal. For example, a `tickangle` of -90 draws the
            tick labels vertically.
        tickcolor
            Sets the tick color.
        tickfont
            Sets the color bar's tick label font
        tickformat
            Sets the tick label formatting rule using d3 formatting
            mini-languages which are very similar to those in
            Python. For numbers, see:
            https://github.com/d3/d3-format/tree/v1.4.5#d3-format.
            And for dates see: https://github.com/d3/d3-time-
            format/tree/v2.2.3#locale_format. We add two items to
            d3's date formatter: "%h" for half of the year as a
            decimal number as well as "%{n}f" for fractional
            seconds with n digits. For example, *2016-10-13
            09:15:23.456* with tickformat "%H~%M~%S.%2f" would
            display "09~15~23.46"
        tickformatstops
            A tuple of :class:`plotly.graph_objects.scatter.marker.
            colorbar.Tickformatstop` instances or dicts with
            compatible properties
        tickformatstopdefaults
            When used in a template (as layout.template.data.scatte
            r.marker.colorbar.tickformatstopdefaults), sets the
            default property values to use for elements of
            scatter.marker.colorbar.tickformatstops
        ticklabeloverflow
            Determines how we handle tick labels that would
            overflow either the graph div or the domain of the
            axis. The default value for inside tick labels is *hide
            past domain*. In other cases the default is *hide past
            div*.
        ticklabelposition
            Determines where tick labels are drawn relative to the
            ticks. Left and right options are used when
            `orientation` is "h", top and bottom when `orientation`
            is "v".
        ticklabelstep
            Sets the spacing between tick labels as compared to the
            spacing between ticks. A value of 1 (default) means
            each tick gets a label. A value of 2 means shows every
            2nd label. A larger value n means only every nth tick
            is labeled. `tick0` determines which labels are shown.
            Not implemented for axes with `type` "log" or
            "multicategory", or when `tickmode` is "array".
        ticklen
            Sets the tick length (in px).
        tickmode
            Sets the tick mode for this axis. If "auto", the number
            of ticks is set via `nticks`. If "linear", the
            placement of the ticks is determined by a starting
            position `tick0` and a tick step `dtick` ("linear" is
            the default value if `tick0` and `dtick` are provided).
            If "array", the placement of the ticks is set via
            `tickvals` and the tick text is `ticktext`. ("array" is
            the default value if `tickvals` is provided).
        tickprefix
            Sets a tick label prefix.
        ticks
            Determines whether ticks are drawn or not. If "", this
            axis' ticks are not drawn. If "outside" ("inside"),
            this axis' are drawn outside (inside) the axis lines.
        ticksuffix
            Sets a tick label suffix.
        ticktext
            Sets the text displayed at the ticks position via
            `tickvals`. Only has an effect if `tickmode` is set to
            "array". Used with `tickvals`.
        ticktextsrc
            Sets the source reference on Chart Studio Cloud for
            `ticktext`.
        tickvals
            Sets the values at which ticks on this axis appear.
            Only has an effect if `tickmode` is set to "array".
            Used with `ticktext`.
        tickvalssrc
            Sets the source reference on Chart Studio Cloud for
            `tickvals`.
        tickwidth
            Sets the tick width (in px).
        title
            :class:`plotly.graph_objects.scatter.marker.colorbar.Ti
            tle` instance or dict with compatible properties
        x
            Sets the x position with respect to `xref` of the color
            bar (in plot fraction). When `xref` is "paper",
            defaults to 1.02 when `orientation` is "v" and 0.5 when
            `orientation` is "h". When `xref` is "container",
            defaults to 1 when `orientation` is "v" and 0.5 when
            `orientation` is "h". Must be between 0 and 1 if `xref`
            is "container" and between "-2" and 3 if `xref` is
            "paper".
        xanchor
            Sets this color bar's horizontal position anchor. This
            anchor binds the `x` position to the "left", "center"
            or "right" of the color bar. Defaults to "left" when
            `orientation` is "v" and "center" when `orientation` is
            "h".
        xpad
            Sets the amount of padding (in px) along the x
            direction.
        xref
            Sets the container `x` refers to. "container" spans the
            entire `width` of the plot. "paper" refers to the width
            of the plotting area only.
        y
            Sets the y position with respect to `yref` of the color
            bar (in plot fraction). When `yref` is "paper",
            defaults to 0.5 when `orientation` is "v" and 1.02 when
            `orientation` is "h". When `yref` is "container",
            defaults to 0.5 when `orientation` is "v" and 1 when
            `orientation` is "h". Must be between 0 and 1 if `yref`
            is "container" and between "-2" and 3 if `yref` is
            "paper".
        yanchor
            Sets this color bar's vertical position anchor This
            anchor binds the `y` position to the "top", "middle" or
            "bottom" of the color bar. Defaults to "middle" when
            `orientation` is "v" and "bottom" when `orientation` is
            "h".
        ypad
            Sets the amount of padding (in px) along the y
            direction.
        yref
            Sets the container `y` refers to. "container" spans the
            entire `height` of the plot. "paper" refers to the
            height of the plotting area only.
        
Did you mean "title"?

Bad property path:
titleside
^^^^^^^^^
